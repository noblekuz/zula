{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useTranslation } from \"react-i18next\";\nimport theme from \"../constants/Colors\";\nimport style from \"../components/styles/main\";\nimport { getUser, getUserAction } from \"../redux/reducers/users\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    dispatch(getUser());\n  }, [dispatch]);\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Text, {\n      style: [style.title],\n      children: \"Zula\"\n    }), _jsx(Text, {\n      style: [style.subtitle],\n      children: t(\"subtitle\")\n    }), _jsx(Text, {\n      style: [style.description, styles.description],\n      children: t(\"description\")\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableHighlight, {\n        style: [style.button, {\n          backgroundColor: theme.primary\n        }],\n        onPress: function onPress() {\n          return navigation.navigate(\"Login\");\n        },\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      }), _jsx(TouchableHighlight, {\n        style: [style.button, {\n          backgroundColor: theme.secondary\n        }],\n        onPress: function onPress() {\n          return navigation.navigate(\"Signup\");\n        },\n        children: _jsx(Text, {\n          style: styles.signupText,\n          children: \"Create New Account\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    user: state\n  };\n}, {\n  getUser: getUser,\n  getUserAction: getUserAction\n})(Home);\nvar styles = StyleSheet.create({\n  title: {\n    marginTop: 30\n  },\n  subtitle: {\n    marginBottom: 30\n  },\n  description: {\n    marginBottom: 100\n  },\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 20\n  },\n  signupText: {\n    color: theme.primary\n  }\n});","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/screens/Home.tsx"],"names":["React","useEffect","connect","useDispatch","useSelector","useTranslation","theme","style","getUser","getUserAction","Home","navigation","dispatch","user","state","t","container","title","subtitle","description","styles","buttonContainer","button","backgroundColor","primary","navigate","secondary","signupText","StyleSheet","create","marginTop","marginBottom","display","flexDirection","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { StyleSheet, Text, View , TouchableHighlight } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { RootStackScreenProps } from \"../../types\";\nimport theme from \"../constants/Colors\";\nimport style from \"../components/styles/main\"\nimport { getUser, UserState, getUserAction } from \"../redux/reducers/users\"\n\nconst Home = ({ navigation }: RootStackScreenProps<\"Home\">) => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(getUser())\n  }, [dispatch])\n\n  return (\n    <View style={style.container}>\n      <Text style={[style.title]}>Zula</Text>\n      <Text\n        style={[style.subtitle]}\n      >{t(\"subtitle\")}</Text>\n      <Text style={[style.description, styles.description]}>{t(\"description\")}</Text>\n      <View style={styles.buttonContainer} >\n        <TouchableHighlight\n          style={[style.button, {backgroundColor: theme.primary}]}\n          onPress={() => navigation.navigate(\"Login\")}\n        >\n          <Text>Login</Text>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={[style.button, {backgroundColor: theme.secondary}]}\n          onPress={() => navigation.navigate(\"Signup\")}\n        >\n          <Text style={styles.signupText}>Create New Account</Text>\n        </TouchableHighlight>\n      </View>\n    </View>\n  );\n}\nexport default connect(\n  state => ({\n    user: state\n  }),\n  {\n    getUser,\n    getUserAction\n  }\n)(Home);\n\n\nconst styles = StyleSheet.create({\n  title: {\n    marginTop: 30\n  },\n  subtitle: {\n    marginBottom: 30,\n  },\n  description: {\n    marginBottom: 100,\n  },\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  signupText: {\n    color: theme.primary,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}