{"ast":null,"code":"import React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Text, View } from \"../components/styles/Themed\";\nimport theme from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Card = function Card() {\n  var animatedValue = new Animated.Value(0);\n  var currentValue = 0;\n  animatedValue.addListener(function (_ref) {\n    var value = _ref.value;\n    currentValue = value;\n  });\n\n  var flipAnimation = function flipAnimation() {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n\n  var setInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['180deg', '360deg']\n  });\n  var rotateYAnimatedStyle = {\n    transform: [{\n      rotateY: setInterpolate\n    }]\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.titleText,\n        children: \"Horizontally Flip Image Animation\"\n      }), _jsx(Animated.Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/desktop-computer-screen-with-arrow-to-the-left-and-coin-stack.png'\n        },\n        style: [rotateYAnimatedStyle, styles.imageStyle]\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonStyle,\n        onPress: flipAnimation,\n        children: _jsx(Text, {\n          style: styles.buttonTextStyle,\n          children: \"Flip Image\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    width: 300,\n    height: 300,\n    borderColor: theme.secondary\n  },\n  titleText: {\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  buttonStyle: {\n    fontSize: 16,\n    color: 'white',\n    backgroundColor: 'green',\n    padding: 5,\n    marginTop: 32,\n    minWidth: 250\n  },\n  buttonTextStyle: {\n    padding: 5,\n    color: 'white',\n    textAlign: 'center'\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    borderRadius: 6\n  }\n});\nexport default Card;","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/components/Card.tsx"],"names":["React","Text","View","theme","Card","animatedValue","Animated","Value","currentValue","addListener","value","flipAnimation","spring","toValue","tension","friction","useNativeDriver","start","setInterpolate","interpolate","inputRange","outputRange","rotateYAnimatedStyle","transform","rotateY","flex","styles","container","titleText","uri","imageStyle","buttonStyle","buttonTextStyle","StyleSheet","create","alignItems","justifyContent","card","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","width","height","borderColor","secondary","fontSize","textAlign","fontWeight","color","backgroundColor","padding","marginTop","minWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  TouchableHighlight,\n  TouchableOpacity,\n  Animated,\n} from 'react-native';\nimport { useTranslation } from \"react-i18next\";\nimport { Text, View } from \"../components/styles/Themed\";\nimport theme from '../constants/Colors';\n\nconst Card = () => {\n  let animatedValue = new Animated.Value(0);\n  let currentValue = 0;\n\n  animatedValue.addListener(({ value }) => {\n    currentValue = value;\n  });\n\n  const flipAnimation = () => {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false,\n      }).start();\n    }\n  };\n\n  const setInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['180deg', '360deg'],\n  });\n\n  const rotateYAnimatedStyle = {\n    transform: [{ rotateY: setInterpolate }],\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={styles.container}>\n        <Text style={styles.titleText}>\n         Horizontally Flip Image Animation\n        </Text>\n        <Animated.Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/AboutReact/sampleresource/master/desktop-computer-screen-with-arrow-to-the-left-and-coin-stack.png',\n          }}\n          style={[rotateYAnimatedStyle, styles.imageStyle]}\n        />\n        <TouchableOpacity\n          style={styles.buttonStyle}\n          onPress={flipAnimation}>\n          <Text style={styles.buttonTextStyle}>\n            Flip Image\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  card: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    width: 300,\n    height: 300,\n    borderColor: theme.secondary\n  },\n  titleText: {\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  buttonStyle: {\n    fontSize: 16,\n    color: 'white',\n    backgroundColor: 'green',\n    padding: 5,\n    marginTop: 32,\n    minWidth: 250,\n  },\n  buttonTextStyle: {\n    padding: 5,\n    color: 'white',\n    textAlign: 'center',\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    borderRadius: 6,\n  },\n});\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}