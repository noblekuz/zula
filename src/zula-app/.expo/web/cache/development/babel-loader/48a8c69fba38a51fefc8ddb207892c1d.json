{"ast":null,"code":"import React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport theme from \"../constants/Colors\";\nimport style from \"../styles/main\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Card = function Card() {\n  var animatedValue = new Animated.Value(0);\n  var currentValue = 0;\n  animatedValue.addListener(function (_ref) {\n    var value = _ref.value;\n    currentValue = value;\n  });\n\n  var flipAnimation = function flipAnimation() {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n\n  var frontInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['0deg', '180deg']\n  });\n  var backInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['180deg', '360deg']\n  });\n  var frontOpacity = animatedValue.interpolate({\n    inputRange: [89, 90],\n    outputRange: [1, 0]\n  });\n  var backOpacity = animatedValue.interpolate({\n    inputRange: [89, 90],\n    outputRange: [0, 1]\n  });\n  var elevationFront = animatedValue.interpolate({\n    inputRange: [0, 25],\n    outputRange: [10, 0]\n  });\n  var elevationBack = animatedValue.interpolate({\n    inputRange: [155, 180],\n    outputRange: [0, 10]\n  });\n  var frontAnimatedStyle = {\n    transform: [{\n      rotateY: frontInterpolate\n    }]\n  };\n  var backAnimatedStyle = {\n    transform: [{\n      rotateY: backInterpolate\n    }]\n  };\n  return _jsxs(SafeAreaView, {\n    style: style.container,\n    children: [_jsxs(Animated.View, {\n      style: [styles.card, {\n        elevation: elevationFront\n      }, {\n        opacity: frontOpacity\n      }],\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          paddingTop: 8,\n          paddingLeft: 8,\n          color: 'black',\n          lineHeight: 20\n        },\n        children: \"Front Page\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonStyle,\n        onPress: flipAnimation,\n        children: _jsx(Text, {\n          style: styles.buttonTextStyle,\n          children: \"Flip to back\"\n        })\n      })]\n    }), _jsxs(Animated.View, {\n      style: [styles.card, backAnimatedStyle, styles.paperBack, {\n        elevation: elevationBack\n      }, {\n        opacity: backOpacity\n      }],\n      children: [_jsx(Text, {\n        children: \"Back Page \"\n      }), _jsx(TouchableOpacity, {\n        style: [style.button, styles.buttonStyle],\n        onPress: flipAnimation,\n        children: _jsx(Text, {\n          style: styles.buttonTextStyle,\n          children: \"Flip to front\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Card;\nvar styles = StyleSheet.create({\n  paperBack: {\n    top: -215\n  },\n  card: {\n    marginHorizontal: 15,\n    minHeight: 200,\n    borderRadius: 5,\n    width: 350,\n    marginBottom: 15,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderColor: theme.secondary\n  },\n  titleText: {\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  buttonStyle: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    fontSize: 16,\n    width: 200,\n    borderColor: theme.secondary\n  },\n  buttonTextStyle: {\n    padding: 5,\n    color: theme.secondary,\n    textAlign: 'center'\n  },\n  imageStyle: {\n    width: 300,\n    height: 300,\n    borderRadius: 6\n  }\n});","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/components/Card.tsx"],"names":["React","theme","style","Card","animatedValue","Animated","Value","currentValue","addListener","value","flipAnimation","spring","toValue","tension","friction","useNativeDriver","start","frontInterpolate","interpolate","inputRange","outputRange","backInterpolate","frontOpacity","backOpacity","elevationFront","elevationBack","frontAnimatedStyle","transform","rotateY","backAnimatedStyle","container","styles","card","elevation","opacity","fontSize","paddingTop","paddingLeft","color","lineHeight","buttonStyle","buttonTextStyle","paperBack","button","StyleSheet","create","top","marginHorizontal","minHeight","borderRadius","width","marginBottom","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderColor","secondary","titleText","textAlign","fontWeight","padding","imageStyle","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Text, View, TouchableOpacity, Animated } from 'react-native';\nimport theme from '../constants/Colors';\nimport style from \"../styles/main\"\n\nconst Card = () => {\n  let animatedValue = new Animated.Value(0);\n  let currentValue = 0;\n\n  animatedValue.addListener(({ value }) => {\n    currentValue = value;\n  });\n  \n  const flipAnimation = () => {\n    if (currentValue >= 90) {\n      Animated.spring(animatedValue, {\n        toValue: 0,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.spring(animatedValue, {\n        toValue: 180,\n        tension: 10,\n        friction: 8,\n        useNativeDriver: false,\n      }).start();\n    }\n  };\n\n  const frontInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['0deg', '180deg'],\n  })\n\n  const backInterpolate = animatedValue.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['180deg', '360deg']\n  })\n\n  const frontOpacity = animatedValue.interpolate({\n    inputRange: [89, 90],\n    outputRange: [1, 0]\n  });\n\n  const backOpacity = animatedValue.interpolate({\n    inputRange: [89, 90],\n    outputRange: [0, 1]\n  });\n\n  const elevationFront = animatedValue.interpolate({\n    inputRange: [0, 25],\n    outputRange: [10, 0]\n  })\n\n  const elevationBack = animatedValue.interpolate({\n    inputRange: [155, 180],\n    outputRange: [0, 10]\n  })\n\n  const frontAnimatedStyle = {\n    transform: [{ rotateY: frontInterpolate }]\n  }\n  const backAnimatedStyle = {\n    transform: [{ rotateY: backInterpolate }]\n  }\n\n\n  return (\n    <SafeAreaView style={style.container}>\n      <Animated.View style={[styles.card, { elevation: elevationFront }, { opacity: frontOpacity }]}>\n        <Text style={{ fontSize: 20, paddingTop: 8, paddingLeft: 8, color: 'black', lineHeight: 20 }}>\n          Front Page\n          </Text>\n        <TouchableOpacity style={styles.buttonStyle} onPress={flipAnimation}>\n          <Text style={styles.buttonTextStyle}>\n            Flip to back\n            </Text>\n        </TouchableOpacity>\n      </Animated.View>\n\n      <Animated.View style={[styles.card, backAnimatedStyle, styles.paperBack, { elevation: elevationBack }, { opacity: backOpacity }]}>\n        <Text>Back Page </Text>\n        <TouchableOpacity style={[style.button, styles.buttonStyle]} onPress={flipAnimation}>\n          <Text style={styles.buttonTextStyle}>\n            Flip to front\n            </Text>\n        </TouchableOpacity>\n      </Animated.View>\n    </SafeAreaView>\n  );\n};\n\nexport default Card;\n\nconst styles = StyleSheet.create({\n  paperBack: {\n    top: -215,\n  },\n  card: {\n    marginHorizontal: 15,\n    minHeight: 200,\n    borderRadius: 5,\n    width: 350,\n    marginBottom: 15,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderColor: theme.secondary\n  },\n  titleText: {\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  buttonStyle: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    fontSize: 16,\n    width: 200,\n    borderColor: theme.secondary,\n  },\n  buttonTextStyle: {\n    padding: 5,\n    color: theme.secondary,\n    textAlign: 'center',\n  },\n  imageStyle: {\n    width: 300,\n    height: 300,\n    borderRadius: 6,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}