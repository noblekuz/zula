{"ast":null,"code":"import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport HomeScreen from \"../screens/Home\";\nimport LoginScreen from \"../screens/Login\";\nimport SignupScreen from \"../screens/Signup\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Homestack = createStackNavigator();\n\nfunction HomestackNavigator() {\n  return _jsxs(Homestack.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Homestack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Homestack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Homestack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: HomestackNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","createStackNavigator","React","ModalScreen","NotFoundScreen","HomeScreen","LoginScreen","SignupScreen","LinkingConfiguration","Stack","Homestack","HomestackNavigator","RootNavigator","headerShown","title","presentation","Navigation","colorScheme"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AAEA,OAAOC,oBAAP;;;AAGA,IAAMC,KAAK,GAAGT,0BAA0B,EAAxC;AACA,IAAMU,SAAS,GAAGT,oBAAoB,EAAtC;;AAEA,SAASU,kBAAT,GAA8B;AAC5B,SACE,MAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,gBAAgB,EAAC,MAAtC;AAAA,eACE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,SAAS,EAAEN;AAAzC,MADF,EAEE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAA+B,MAAA,SAAS,EAAEC;AAA1C,MAFF,EAGE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAgC,MAAA,SAAS,EAAEC;AAA3C,MAHF;AAAA,IADF;AAOD;;AAED,SAASK,aAAT,GAAyB;AACvB,SACE,MAAC,KAAD,CAAO,SAAP;AAAA,eACE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAED,kBAArC;AAAyD,MAAA,OAAO,EAAE;AAAEE,QAAAA,WAAW,EAAE;AAAf;AAAlE,MADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,SAAS,EAAET,cAAzC;AAAyD,MAAA,OAAO,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT;AAAlE,MAFF,EAGE,KAAC,KAAD,CAAO,KAAP;AAAa,MAAA,aAAa,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAA5B;AAAA,gBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEZ;AAAtC;AADF,MAHF;AAAA,IADF;AASD;;AAED,eAAe,SAASa,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,SACE,KAAC,mBAAD;AACE,IAAA,OAAO,EAAET,oBADX;AAEE,IAAA,KAAK,EAAES,WAAW,KAAK,MAAhB,GAAyBlB,SAAzB,GAAqCD,YAF9C;AAAA,cAGE,KAAC,aAAD;AAHF,IADF;AAOD","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport HomeScreen from '../screens/Home';\nimport LoginScreen from '../screens/Login';\nimport SignupScreen from '../screens/Signup';\nimport { RootStackParamList, HomeTabParamList } from '../../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nconst Homestack = createStackNavigator<HomeTabParamList>();\n\nfunction HomestackNavigator() {\n  return (\n    <Homestack.Navigator initialRouteName=\"Home\">\n      <Homestack.Screen name=\"Home\" component={HomeScreen} />\n      <Homestack.Screen name=\"Login\" component={LoginScreen} />\n      <Homestack.Screen name=\"Signup\" component={SignupScreen} />\n    </Homestack.Navigator>\n  );\n}\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={HomestackNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}