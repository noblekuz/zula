{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport HomeScreen from \"../screens/Home\";\nimport LoginScreen from \"../screens/Login\";\nimport SignupScreen from \"../screens/Signup\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stacks = createStackNavigator();\n\nfunction MyStack() {\n  return _jsxs(Stacks.Navigator, {\n    children: [_jsx(Stacks.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stacks.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stacks.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: {\n        title: 'Oops!'\n      }\n    })]\n  });\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  console.log(colorScheme);\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Home Screen',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        title: 'Login Screen',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","HomeScreen","LoginScreen","SignupScreen","LinkingConfiguration","Navigation","colorScheme","Stacks","createStackNavigator","MyStack","BottomTabNavigator","headerShown","title","Stack","RootNavigator","presentation","BottomTab","console","log","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from './hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport HomeScreen from '../screens/Home';\nimport LoginScreen from '../screens/Login';\nimport SignupScreen from '../screens/Signup';\nimport { RootStackParamList, HomeStackParamList, HomeTabScreenProps } from '../../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stacks = createStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stacks.Navigator>\n     <Stacks.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stacks.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stacks.Screen name=\"Signup\" component={SignupScreen} options={{ title: 'Oops!' }} />\n    </Stacks.Navigator>\n  );\n}\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"Signup\" component={SignupScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<HomeStackParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\nconsole.log(colorScheme)\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={({ navigation }: HomeTabScreenProps<'Home'>) => ({\n          title: 'Home Screen',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{\n          title: 'Login Screen',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}
