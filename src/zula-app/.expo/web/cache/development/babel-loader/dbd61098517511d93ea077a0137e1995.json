{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var GET_USER = 'GET_USER';\nexport var ADD_USER = 'ADD_USER';\nexport var UPDATE_USER = 'UPDATE_USER';\nvar initialUserState = {\n  user: []\n};\nexport function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.payload\n        });\n      }\n\n    case ADD_USER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.payload\n        });\n      }\n\n    case UPDATE_USER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n;\nexport var getUser = function getUser(user) {\n  return {\n    type: GET_USER,\n    payload: user\n  };\n};","map":{"version":3,"sources":["/Users/ansu/zula/src/zula-app/src/redux/reducers/user.tsx"],"names":["GET_USER","ADD_USER","UPDATE_USER","initialUserState","user","userReducer","state","action","type","payload","getUser"],"mappings":";;;;;;AAIA,OAAO,IAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAMP,IAAMC,gBAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAApC;AAsBA,OAAO,SAASC,WAAT,GAA8F;AAAA,MAAzEC,KAAyE,uEAAtDH,gBAAsD;AAAA,MAApCI,MAAoC;;AACnG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AAAe;AACb,+CACKM,KADL;AAEEF,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAFf;AAID;;AACD,SAAKR,QAAL;AAAe;AACb,+CACKK,KADL;AAEEF,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAFf;AAID;;AACD,SAAKP,WAAL;AAAkB;AAChB,+CACKI,KADL;AAEEF,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAFf;AAID;;AACD;AACE,aAAOH,KAAP;AApBJ;AAsBD;AAAA;AAED,OAAO,IAAMI,OAAuC,GAAG,SAA1CA,OAA0C,CAACN,IAAD,EAAuB;AAC5E,SAAO;AACLI,IAAAA,IAAI,EAAER,QADD;AAELS,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../api\";\nimport { ActionCreator } from 'redux';\n\n// Action Types\nexport const GET_USER = 'GET_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\n\nexport interface UserState {\n  user: {}\n}\n\nconst initialUserState: UserState = {\n  user: []\n};\n\ninterface AddUserAction {\n  type: string;\n  payload: UserState[]\n}\n\ninterface GetUserAction {\n  type: typeof GET_USER,\n  payload: UserState[]\n}\n\ninterface UpdateUserAction {\n  type: typeof GET_USER,\n  payload: UserState[]\n}\n\nexport type UserActionTypes = AddUserAction | GetUserAction | UpdateUserAction\n\n// Reducer\nexport function userReducer(state: UserState = initialUserState, action: UserActionTypes): UserState {\n  switch (action.type) {\n    case GET_USER: {\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n    case ADD_USER: {\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n    case UPDATE_USER: {\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n    default:\n      return state\n  }\n};\n\nexport const getUser: ActionCreator<UserActionTypes> = (user: UserState[]) => {\n  return {\n    type: GET_USER,\n    payload: user\n  };\n}\n"]},"metadata":{},"sourceType":"module"}